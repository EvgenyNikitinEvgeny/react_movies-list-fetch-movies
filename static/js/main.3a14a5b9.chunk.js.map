{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","search","setSearch","movieData","setMovieData","isLoading","setIsLoading","isError","setIsError","newMovie","useMemo","movieInfo","Title","Plot","Poster","imdbID","normalizeMovieData","canShowElement","onSubmit","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","result","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","isNewMovieInMovies","some","prevMovies","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a14a5b9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useMemo, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [search, setSearch] = useState('');\n  const [movieData, setMovieData] = useState<MovieData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n    setIsError(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    getMovie(search)\n      .then((result => {\n        if ('Error' in result) {\n          setIsError(true);\n        } else {\n          setMovieData(result);\n          setIsError(false);\n        }\n      }))\n      .finally(() => setIsLoading(false));\n  };\n\n  const normalizeMovieData = (movieInfo: MovieData) => {\n    const {\n      Title,\n      Plot,\n      Poster,\n      imdbID,\n    } = movieInfo;\n\n    const baseImdbUrl = 'https://www.imdb.com/title/';\n    const defaultImgUrl = (\n      'https://via.placeholder.com/360x270.png?text=no%20preview'\n    );\n\n    return ({\n      title: Title,\n      description: Plot,\n      imgUrl: Poster !== 'N/A' ? Poster : defaultImgUrl,\n      imdbUrl: `${baseImdbUrl}${imdbID}`,\n      imdbId: imdbID,\n    });\n  };\n\n  const newMovie = useMemo(() => {\n    if (movieData) {\n      return normalizeMovieData(movieData);\n    }\n\n    return null;\n  }, [movieData]);\n\n  const clearForm = () => {\n    setMovieData(null);\n    setSearch('');\n  };\n\n  const handleClickAddButton = () => {\n    const isNewMovieInMovies = movies.some(\n      movie => movie.imdbId === newMovie?.imdbId,\n    );\n\n    if (newMovie && !isNewMovieInMovies) {\n      setMovies((prevMovies) => [...prevMovies, newMovie]);\n    }\n\n    clearForm();\n  };\n\n  const canShowElement = !isError && movieData;\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={search}\n              onChange={handleSearch}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!search}\n            >\n              Find a movie\n            </button>\n          </div>\n          {canShowElement && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleClickAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n      {canShowElement && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b36575d6';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}